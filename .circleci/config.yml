version: 2
jobs:
  build:
    working_directory: ~/mindie-landing-page
    docker:
      - image: circleci/node:6.10-browsers

    steps:
      # Checkout the code from the branch into the working_directory
      - checkout

      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}

      # Restore local dependencies from cache
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package.json" }}
            - v2-dependencies-

      # Install project dependencies
      - run:
          name: Install local dependencies
          command: yarn install

      # Cache local dependencies if they don't exist
      - save_cache:
          key: v2-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules

      # Build
      - run:
          name: Building
          command: yarn build

      # Cache the public folder for the deploy job
      - save_cache:
          key: v1-public-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - public

  # The deploy job
  deploy:
    working_directory: ~/mindie-landing-page
    docker:
      - image: circleci/node:6.10-browsers
    steps:
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}

      # Restore cache from the build job which contains the
      # dist folder that needs to be deployed
      - restore_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}

      # Install AWS cli
      - run:
          name: Install aws cli
          command: sudo apt-get -y -qq install awscli

      # Set the signature version for the S3 auth
      - run:
          name: Setting Signature Version 4 for S3 Request Authentication
          command: aws configure set default.s3.signature_version s3v4

      # Deploy to the S3 bucket corresponding to the current branch
      - run:
          name: Deploy to S3
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
                aws --region eu-west-2 s3 sync public s3://mindie.app/ --delete
            # elif [ "${CIRCLE_BRANCH}" == "staging" ]; then
            #     aws --region eu-west-2 s3 sync dist s3://project-qa/ --delete
            # elif [ "${CIRCLE_BRANCH}" == "develop" ]; then
            #     aws --region eu-west-2 s3 sync dist s3://project/ --delete
            fi

      # Reset cloudfront config corresponding to the the current branch
      - run:
          name: Reset AWS Cloudfront cache
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
                aws cloudfront create-invalidation --distribution-id E28JPTB66HL7EC --paths "/*"
            # elif [ "${CIRCLE_BRANCH}" == "staging" ]; then
            #     aws --region eu-west-2 s3 sync dist s3://project-qa/ --delete
            # elif [ "${CIRCLE_BRANCH}" == "develop" ]; then
            #     aws --region eu-west-2 s3 sync dist s3://project/ --delete
            fi

workflows:
  version: 2
  # The build and deploy workflow
  build_and_deploy:
    jobs:
      - build
      # The deploy job will only run on the filtered branches and
      # require the build job to be successful before it starts
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                # - develop
                # - staging
                - master
